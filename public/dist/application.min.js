"use strict";var ApplicationConfiguration=function(){var applicationModuleName="scanifly",applicationModuleVendorDependencies=["ngResource","ngCookies","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","adaptive.detection","underscore","datatables","uiGmapgoogle-maps","ngFileUpload","angular-flexslider","bootstrapLightbox"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]).run(["$timeout",function($timeout){$timeout(window.googeAnalytics),$timeout(window.sessionCam)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("users"),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("header","Features","features",null,"/features",!0),Menus.addMenuItem("header","Contact Us","contact",null,"/contact",!0),Menus.addMenuItem("footer","Home","home",null,"/",!0),Menus.addMenuItem("footer","Features","features",null,"/features",!0),Menus.addMenuItem("footer","About Us","about-us",null,"/about-us",!0),Menus.addMenuItem("footer","Contact","contact",null,"/contact",!0),Menus.addMenuItem("footer","Terms & Conditions","terms-and-conditions",null,"/terms-and-conditions",!0)}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",controller:"HomeController",templateUrl:"modules/core/views/home.client.view.html",seo:{title:"",description:"",keywords:""}}).state("terms-and-conditions",{url:"/terms-and-conditions",controller:"TermsAndConditionsController",templateUrl:"modules/core/views/terms-and-conditions.client.view.html",seo:{title:"Terms and conditions - Scanifly",description:"In using this website you are deemed to have read and agreed to the following terms and conditions:",keywords:""}}).state("where-we-scan",{url:"/where-we-scan",controller:"WhereWeScanController",templateUrl:"modules/core/views/where-we-scan.client.view.html",seo:{title:"Where we scan - Scanifly",description:"See if we're available in your area",keywords:""}}).state("contact",{url:"/contact",controller:"ContactController",templateUrl:"modules/core/views/contact.client.view.html",seo:{title:"Contact us - Scanifly",description:"Drop us a line :)",keywords:""}}).state("about-us",{url:"/about-us",controller:"AboutUsController",templateUrl:"modules/core/views/about-us.client.view.html",seo:{title:"About us - Scanifly",description:"Scanifly is a startup dedicated to making solar site assessments safe, accurate, and efficient. The Scanifly Team has experienced the typical solar site assessment first hand.",keywords:""}}).state("features",{url:"/features",controller:"FeaturesController",templateUrl:"modules/core/views/features.client.view.html",seo:{title:"Features - Scanifly",description:"What's included in the Scanifly solar site assessment",keywords:""}})}]).run(["$rootScope","$state",function($rootScope,$state){$rootScope.$state=$state}]),angular.module("core").controller("AboutUsController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("ContactController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.authentication=Authentication,$scope.formData={siteAssessments:"<25",subject:"Learn more about our services"},$scope.submitted=!1,$scope.submit=function(contactForm){$scope.submitted=!0,$scope.success=$scope.error=null,contactForm.$valid?$http.post("/contact-us",$scope.formData).success(function(data){$scope.success="Thanks for contacting us!",$scope.formData={siteAssessments:"<25",subject:"Learn more about our services"},contactForm.$setPristine()}).error(function(error){$scope.error=error.message,$scope.result="bg-danger"}):$scope.error="Sending Failed. Please fill out all the fields."}}]),angular.module("core").controller("FeaturesController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("FooterController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("footer"),$scope.currentYear=(new Date).getFullYear(),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed}}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","Acl",function($scope,Authentication,Menus,Acl){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("header"),$scope.acl=Acl,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1,document.body.scrollTop=document.documentElement.scrollTop=0}),$scope.toggleCustomDropDown=function(){$scope.showDropDown=!$scope.showDropDown},jQuery(window).on("click",function(event){var $target=jQuery(event.target);!$scope.showDropDown||$target.hasClass("dropdown-toggle")||$target.parents(".user-menu").length||$scope.$apply(function(){$scope.showDropDown=!1})})}]),angular.module("core").controller("HomeController",["$scope","Authentication","$location",function($scope,Authentication,$location){$scope.authentication=Authentication}]),angular.module("core").controller("TermsAndConditionsController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("WhereWeScanController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("scroll",["$window",function($window){return{restrict:"A",link:function(scope,element,attrs){angular.element($window).bind("scroll",function(){this.pageYOffset>=20?element.addClass("small"):element.removeClass("small")})}}}]),angular.module("core").directive("usMap",[function(){return{scope:!0,restrict:"A",controller:["$scope","$element","$attrs",function($scope,$element,$attrs){}],link:function(scope,el,attrs){angular.element(document).ready(function(){jQuery(el).usmap({showLabels:!1,labelBackingStyles:{fill:"#FFFFFF"},labelBackingHoverStyles:{fill:"#7FBCDB"},labelTextStyles:{fill:"#000000"},stateStyles:{fill:"#FFFFFF",stroke:"#999999"},stateHoverStyles:{},stateSpecificStyles:{NY:{fill:"#005a8b"},CT:{fill:"#005a8b"},CA:{fill:"#005a8b"},AZ:{fill:"#005a8b"},CO:{fill:"#005a8b"},MA:{fill:"#005a8b"},NJ:{fill:"#005a8b"}}})})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("header",!0),this.addMenu("projectNav",!1),this.addMenu("footer",!0)}]),angular.module("projects").run(["Menus",function(Menus){}]),angular.module("projects").config(["$stateProvider",function($stateProvider){$stateProvider.state("dashboard",{url:"/dashboard",authenticate:!0,resolve:{projectList:["Projects",function(Projects){return Projects.query({dashboard:1})}],totalActivities:["Activities",function(Activities){return Activities.get({activities:"all"}).$promise.then(function(activityCount){return activityCount},function(error){console.log(error)})}],activityList:["Activities",function(Activities){return Activities.query().$promise.then(function(activities){return activities},function(error){console.log(error)})}]},controller:"DashboardController",templateUrl:"modules/projects/views/dashboard.client.view.html"}).state("list-projects",{url:"/projects/:status",authenticate:!0,resolve:{projects:["$stateParams","ProjectService",function($stateParams,ProjectService){return ProjectService.find($stateParams.status)}],markers:["ProjectService","projects",function(ProjectService,projects){return ProjectService.getMarkers(projects)}]},controller:"ProjectListController",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("create-new-scan",{url:"/project/new-scan",authenticate:!0,resolve:{stateList:["States",function(States){return States.query()}]},controller:"CreateProjectController",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("edit-project",{url:"/project/:projectId/edit",authenticate:!0,resolve:{currentProject:["$stateParams","$location","Projects",function($stateParams,$location,Projects){return Projects.get({projectId:$stateParams.projectId}).$promise.then(function(project){return project},function(error){$location.path("/")})}],stateList:["States",function(States){return States.query()}]},controller:"EditProjectController",templateUrl:"modules/projects/views/edit-project.client.view.html"}).state("project-details",{url:"/project-upload/:projectId",authenticate:!0,resolve:{currentProject:["$stateParams","$location","Projects",function($stateParams,$location,Projects){return Projects.get({projectId:$stateParams.projectId}).$promise.then(function(project){return project},function(error){$location.path("/")})}],S3Configuration:["S3",function(S3){return S3.get({resource:"s3"})}]},controller:"UploadProjectDataController",templateUrl:"modules/projects/views/upload-project-data.client.view.html"}).state("search-projects",{url:"/search-results/:keyword",authenticate:!0,resolve:{projects:["$stateParams","Projects",function($stateParams,Projects){return Projects.query({keyword:$stateParams.keyword||""})}]},controller:"SearchController",templateUrl:"modules/projects/views/search-results.client.view.html"})}]),angular.module("projects").controller("ActivitiesController",["$scope","$stateParams","$location","Authentication","Activities",function($scope,$stateParams,$location,Authentication,Activities){$scope.authentication=Authentication}]),angular.module("projects").controller("DashboardController",["$scope","$stateParams","$location","_","Authentication","Acl","Activities","projectList","activityList","totalActivities",function($scope,$stateParams,$location,_,Authentication,Acl,Activities,projectList,activityList,totalActivities){var skipActivitiesLimit=10;return $scope.authentication=Authentication,$scope.acl=Acl,$scope.data={},$scope.hideSidebarOnMobile=!0,$scope.skipActivities=skipActivitiesLimit,$scope.disableLoadMore=!1,$scope.authentication.user?($scope.date=$scope.authentication.user.created,$scope.dtOptions={filter:!1,info:!1,paging:!1,columnDefs:[{targets:5,sortable:!1}]},$scope.find=function(){$scope.projects=projectList,$scope.activities=activityList,($scope.activities.length<skipActivitiesLimit||$scope.activities.length===totalActivities.activityCount)&&($scope.disableLoadMore=!0)},$scope.toggleSidebar=function(){$scope.hideSidebarOnMobile=!$scope.hideSidebarOnMobile},jQuery(".dataTable").DataTable({responsive:!0}),void($scope.updateActivitiesLimit=function(){Activities.query({skip:$scope.skipActivities}).$promise.then(function(activities){var bodyWrapper=jQuery("#body-wrapper");bodyWrapper.hasClass("body-wrapper")?(bodyWrapper.removeClass("body-wrapper"),bodyWrapper.addClass("body-wrapper-two")):(bodyWrapper.removeClass("body-wrapper-two"),bodyWrapper.addClass("body-wrapper")),$scope.activities=_.union($scope.activities,activities),$scope.skipActivities+=skipActivitiesLimit,(activities.length<skipActivitiesLimit||$scope.activities.length===totalActivities.activityCount)&&($scope.disableLoadMore=!0)},function(error){console.log(error)})})):void $location.path("/")}]),angular.module("projects").controller("NotesController",["$scope","$stateParams","$location","Authentication","Notes",function($scope,$stateParams,$location,Authentication,Notes){$scope.authentication=Authentication,$scope.data={},$scope.notes=[],$scope.create=function(commentsForm){var note=new Notes({note:$scope.data.note,projectId:$stateParams.projectId});note.$save(function(response){$scope.addNoteForm.value===!0&&$scope.setResolutionRequired(),$scope.data={},commentsForm.$setPristine(),$scope.notes.unshift(note)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.notes=Notes.query({projectId:$stateParams.projectId})}}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$location","Authentication","Projects","ProjectService","uiGmapIsReady","Acl","States",function($scope,$stateParams,$location,Authentication,Projects,ProjectService,uiGmapIsReady,Acl,States){$scope.mapView=!1,$scope.mapListing={zoom:4,center:{latitude:41,longitude:-70},options:{mapTypeId:"satellite",scrollwheel:!0},markers:[]},$scope.toggleMap=function(displayMap){$scope.mapView=displayMap},$scope.dtOptions={filter:!1,info:!1,paging:!1,columnDefs:[{targets:5,sortable:!1}]},$scope.remove=function(project){if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.update=function(){var project=$scope.project;project.$update(function(){$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){switch($scope.statusFilter="",$stateParams.status){case"location-submitted":$scope.statusFilter="location-submitted";break;case"flight-scheduled":$scope.statusFilter="flight-scheduled";break;case"flight-successful":$scope.statusFilter="flight-successful";break;case"assessment-complete":$scope.statusFilter="assessment-complete";break;case"resolution-required":$scope.statusFilter="resolution-required-or-resolution-complete";break;default:$scope.statusFilter=null}Projects.query({status:$scope.statusFilter},function(projects){for(var markers=[],i=0;i<projects.length;i++){var marker={id:i,latitude:projects[i].geoLocation.latitude,longitude:projects[i].geoLocation.longitude,name:projects[i].name,projectId:projects[i]._id,show:!1};markers.push(marker)}$scope.projects=projects,$scope.mapListing.markers=markers})},$scope.showNewScan=function(){return null===$scope.statusFilter}}]),angular.module("projects").controller("CreateOwnProjectController",["$scope","$location","$state","ProjectService","stateList",function($scope,$location,$state,ProjectService,stateList){$scope.states=stateList;var generateImageLink=function(){var link="https://maps.google.com/maps/api/staticmap?";link+="center="+$scope.data.map.center.latitude+","+$scope.data.map.center.longitude,link+="&sensor=false",link+="&size=535x380",link+="&maptype=satellite",link+="&zoom="+$scope.data.map.zoom;for(var i=$scope.data.map.markers.length-1;i>=0;i--){var marker=$scope.data.map.markers[i];link+="&markers=color:white%7Clabel:"+marker.name+"%7C"+marker.coords.latitude+","+marker.coords.longitude}return link};$scope.create=function(){$scope.data.selfscan=!0,$scope.data.propertyImage=generateImageLink();var project=ProjectService.createProject($scope.data);project.$save(function(response){$state.go("list-projects"),$scope.name=""},function(errorResponse){jQuery(window).scrollTop(jQuery(".submitted .ng-invalid.ng-pristine:first").offset().top-10),$scope.error=errorResponse.data.message})},$scope.totalkWh=function(){$scope.data.annual="",$scope.total=0;for(var months=document.getElementsByName("kWh"),i=0;i<months.length;i++)$scope.total+=parseInt(months[i].value)||0;$scope.data.annual=$scope.total.toString(),$scope.total="Total Annual Usage: "+$scope.total+" kWh"}}]),angular.module("projects").controller("CreateProjectController",["$rootScope","$scope","$location","$state","$stateParams","ProjectService","stateList",function($rootScope,$scope,$location,$state,$stateParams,ProjectService,stateList){$scope.states=stateList,$scope.selfScanStatus=!1;var generateImageLink=function(){var link="https://maps.google.com/maps/api/staticmap?";link+="center="+$scope.data.map.center.latitude+","+$scope.data.map.center.longitude,link+="&sensor=false",link+="&size=535x380",link+="&maptype=satellite",link+="&zoom="+$scope.data.map.zoom;for(var i=$scope.data.map.markers.length-1;i>=0;i--){var marker=$scope.data.map.markers[i];link+="&markers=color:white%7Clabel:"+marker.name+"%7C"+marker.coords.latitude+","+marker.coords.longitude}return link};$scope.setSelfScan=function(selfScanState){$scope.selfScanStatus=!0},$scope.create=function(){$scope.data.selfscan=$scope.selfScanStatus,$scope.data.propertyImage=generateImageLink();var project=ProjectService.createProject($scope.data);project.$save(function(response){$state.go("project-details",{projectId:project._id},{reload:!0}).then(function(argument){$rootScope.$broadcast("newProjectCreated")}),$scope.name=""},function(errorResponse){jQuery(window).scrollTop(jQuery(".submitted .ng-invalid.ng-pristine:first").offset().top-10),$scope.error=errorResponse.data.message})},$scope.totalkWh=function(){$scope.data.annual="",$scope.total=0;for(var months=document.getElementsByName("kWh"),i=0;i<months.length;i++)$scope.total+=parseInt(months[i].value)||0;$scope.data.annual=$scope.total.toString(),$scope.total="Total Annual Usage: "+$scope.total+" kWh"}}]),angular.module("projects").controller("EditProjectController",["$scope","$location","$state","ProjectService","stateList","currentProject",function($scope,$location,$state,ProjectService,stateList,currentProject,kWh){$scope.states=stateList,$scope.data=ProjectService.recodeProject(currentProject),console.log(currentProject);var generateImageLink=function(){var link="https://maps.google.com/maps/api/staticmap?";link+="center="+$scope.data.map.center.latitude+","+$scope.data.map.center.longitude,link+="&sensor=false",link+="&size=535x380",link+="&maptype=satellite",link+="&zoom="+$scope.data.map.zoom;for(var i=$scope.data.map.markers.length-1;i>=0;i--){var marker=$scope.data.map.markers[i];link+="&markers=color:white%7Clabel:"+marker.name+"%7C"+marker.coords.latitude+","+marker.coords.longitude}return link};$scope.update=function(){$scope.data.propertyImage=generateImageLink();var project=ProjectService.createProject($scope.data);project.$update(function(response){$state.go("list-projects"),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.totalkWh=function(){$scope.data.annual="",$scope.total=0;for(var months=document.getElementsByName("kWh"),i=0;i<months.length;i++)$scope.total+=parseInt(months[i].value)||0;$scope.data.annual=$scope.total.toString(),$scope.total="Total Annual Usage: "+$scope.total+" kWh"}}]),angular.module("projects").controller("ProjectDetailsController",["$scope","$state","project","Authentication","$detection","$location","$anchorScroll",function($scope,$state,project,Authentication,$detection,$location,$anchorScroll){$scope.authentication=Authentication,$scope.user=$scope.authentication.user,$scope.project=project,$scope.addNoteForm={value:!1,hideQuestion:!1},$scope.isIos=$detection.isiOS(),$scope.setResolutionRequired=function(){$scope.project.resolutionRequired=new Date,$scope.project.isCompleted=!1,$scope.project.completeDate=null,$scope.publishReportForm=!1,$scope.project.status="resolution-required",$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.markAsCompleted=function(){$scope.project.isCompleted=!0,$scope.project.completeDate=new Date,$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.hideNotification=function(){$scope.hideNotif=!0},$scope.modelviewer=function(){"min"===document.getElementById("3Dmodel").value?($location.hash("start3D"),$anchorScroll(),document.getElementById("start3D").className="padding-top: 132px",document.getElementById("3Dmodel").value="max",document.getElementById("3Dmodel").className="",document.getElementById("enabler").className="",document.getElementById("adjustMessage").innerHTML="Click to Minimize 3D Model Window",document.getElementById("iframe").height=.88*window.innerHeight):($location.hash("projectdetails"),$anchorScroll(),document.getElementById("start3D").className="",document.getElementById("3Dmodel").value="min",document.getElementById("3Dmodel").className="container",document.getElementById("enabler").className="disabled",document.getElementById("adjustMessage").innerHTML="Click to Maximize 3D Model Window",document.getElementById("iframe").height="300")}}]),angular.module("projects").controller("ProjectListController",["$scope","$stateParams","$location","uiGmapIsReady","projects","markers",function($scope,$stateParams,$location,uiGmapIsReady,projects,markers){$scope.projects=projects;var statusFilter="";switch($stateParams.status){case"location-submitted":statusFilter="location-submitted";break;case"flight-scheduled":statusFilter="flight-scheduled";break;case"flight-successful":statusFilter="flight-successful";break;case"upload-complete":statusFilter="upload-complete";break;case"resolution-required":statusFilter="resolution-required-or-resolution-complete";break;default:statusFilter=null}$scope.statusFilter=statusFilter,$scope.mapListing={view:!1,zoom:4,center:{latitude:41,longitude:-70},options:{mapTypeId:"satellite",scrollwheel:!0},markers:markers},$scope.dtOptions={filter:!1,info:!1,paging:!1,columnDefs:[{targets:5,sortable:!1}],order:[[2,"desc"]]},$scope.toggleMap=function(){$scope.mapListing.view=!$scope.mapListing.view},$scope.showNewScan=function(){return null===$scope.statusFilter}}]),angular.module("projects").controller("UploadProjectDataController",["$rootScope","$scope","$q","$state","_","Authentication","Upload","ProjectDetails","currentProject","S3Configuration","$detection","$location","$anchorScroll",function($rootScope,$scope,$q,$state,_,Authentication,Upload,ProjectDetails,currentProject,S3Configuration,$detection,$location,$anchorScroll){$scope.authentication=Authentication,$scope.user=$scope.authentication.user,$scope.project=currentProject,$scope.threeDviewerUrl="http://scaniflypv.com?ID="+$scope.project._id,console.log($scope.threeDviewerUrl),$scope.addNoteForm={value:!1,hideQuestion:!1},$scope.isIos=$detection.isiOS(),$scope.uploadErrors={roofs:{}},$scope.$on("newProjectCreated",function(event,toState,toParams,fromState,fromParams){setTimeout(function(){alert("Thanks!\nWe will notify you when the flight is scheduled, completed,\nand when we upload your 3D model and images.")},1e3)}),$scope.setResolutionRequired=function(){$scope.project.resolutionRequired=new Date,$scope.project.isCompleted=!1,$scope.project.completeDate=null,$scope.publishReportForm=!1,$scope.project.status="resolution-required",$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.markAsCompleted=function(){$scope.project.isCompleted=!0,$scope.project.completeDate=new Date,$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.hideNotification=function(){$scope.hideNotif=!0},$scope.modelviewer=function(){"min"===document.getElementById("3Dmodel").value?($location.hash("start3D"),$anchorScroll(),document.getElementById("3Dmodel").value="max",document.getElementById("3Dmodel").className="",document.getElementById("enabler").className="",document.getElementById("adjustMessage").innerHTML="Click to Minimize 3D Model Window",document.getElementById("iframe").height=.88*window.innerHeight):($location.hash("projectdetails"),$anchorScroll(),document.getElementById("3Dmodel").value="min",document.getElementById("3Dmodel").className="container",document.getElementById("enabler").className="disabled",document.getElementById("adjustMessage").innerHTML="Click to Maximize 3D Model Window",document.getElementById("iframe").height="300")},$scope.uploadTmp={droneImages:{eyeView:[]},additionalFiles:[],shadeReport:{roofs:{}}};for(var i=0,roofs={};i<$scope.project.map.markers.length;i++)roofs[$scope.project.map.markers[i].name]={image:[],shadeImages:[],siteAssessorName:""};if($scope.uploadTmp.shadeReport.roofs=roofs,$scope.project.details)$scope.updateAction=!0,$scope.data=$scope.project.details;else{$scope.updateAction=!1,$scope.data=angular.copy($scope.uploadTmp),$scope.data.roofPlanes=[],$scope.data.model3d=[];for(var j=0,roofPlanes=[];j<$scope.project.map.markers.length;j++)roofPlanes.push({"1-roof-plane":$scope.project.map.markers[j].name,"2-azimuth":"","3-tilt":"","4-average-annual-solar-access":"","5-tsrf":"","6-tof":""});$scope.data.roofPlanes=roofPlanes}var prepareNewValues=function(newValues,shadeImage){for(var values=[],i=0;i<newValues.length;i++){var key=currentProject._id+"/"+(new Date).getTime()+"-"+newValues[i].name;values[i]={key:key,name:newValues[i].name,imagePath:S3Configuration.bucketUrl+key,data:newValues[i]},shadeImage&&(values[i].number=0,values[i].annualSolarAccess="")}return values};$scope.$watch("uploadTmp.droneImages.eyeView",function(newValues){if(newValues&&newValues.length){delete $scope.uploadErrors.eyeView;var values=prepareNewValues(newValues);$scope.data.droneImages.eyeView=_.union($scope.data.droneImages.eyeView,values)}}),$scope.$watch("uploadTmp.additionalFiles",function(newValues){if(newValues&&newValues.length){delete $scope.uploadErrors.additionalFiles;var values=prepareNewValues(newValues);$scope.data.additionalFiles=_.union($scope.data.additionalFiles,values)}}),$scope.removeImage=function(identifier,index,roofName){switch(identifier){case"eyeView":$scope.data.droneImages.eyeView.splice(index,1);break;case"additionalFiles":$scope.data.additionalFiles.splice(index,1)}};var progressFunction=function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.file.name)},successFunction=function(data,status,headers,config){return console.log("file "+config.file.name+" uploaded"),$scope.uploadSuccessful(),data},errorFunction=function(error){return console.error("error on file upload"),error};$scope.uploadSuccessful=function(){$scope.project.uploadComplete=new Date,$scope.project.status="upload-complete",$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})};var uploadFiles=function(files){var promises=[];if(files&&files.length)for(var i=0;i<files.length;i++){var file=Object.create(files[i]);if(file.data){var promise=Upload.upload({url:S3Configuration.bucketUrl,method:"POST",fields:{key:file.key,AWSAccessKeyId:S3Configuration.AWSAccessKeyId,acl:"public-read",policy:S3Configuration.policy,signature:S3Configuration.signature,"Content-Type":""!==file.data.type?file.data.type:"application/octet-stream"},file:file.data}).progress(progressFunction).success(successFunction).error(errorFunction);promises.push(promise)}}return $q.all(promises)},clearDataFileField=function(fileList){if(fileList&&fileList.length>0)for(var i=0;i<fileList.length;i++)delete fileList[i].data},validateUploadFiles=function(uploadForm){$scope.uploadErrors={},$scope.data.droneImages.eyeView.length||($scope.uploadErrors.eyeView="Please upload Drone's Eye View Images"),uploadForm.$setValidity("files-eyeView",!$scope.uploadErrors.eyeView),$scope.data.additionalFiles.length||($scope.uploadErrors.additionalFiles="Please upload the 3D model"),uploadForm.$setValidity("files-additionalFiles",!$scope.uploadErrors.additionalFiles)},mergeFilesForUpload=function(){var files=_.union($scope.data.droneImages.eyeView,$scope.data.additionalFiles);for(var roofName in $scope.data.shadeReport.roofs){var roof=$scope.data.shadeReport.roofs[roofName];files=_.union(files,roof.image),files=_.union(files,roof.shadeImages)}return files},clearDataFileFields=function(){clearDataFileField($scope.data.droneImages.eyeView),clearDataFileField($scope.data.additionalFiles)};$scope.upload=function(uploadForm){if($scope.startUploadData=!0,$scope.data.shadeReport.reporterName=Authentication.user.name,validateUploadFiles(uploadForm),uploadForm.$valid){var files=mergeFilesForUpload();uploadFiles(files).then(function(returnedData){clearDataFileFields(),$scope.data.projectInfo={_id:$scope.project._id,company:$scope.project.company},$scope.data._id?(console.log("Here"),ProjectDetails.update($scope.data,function(projectDetail){console.log(projectDetail),$scope.startUploadData=!1,$state.go("project-details",{projectId:$scope.project._id},{reload:!0})},function(errorResponse){$scope.startUploadData=!1,$scope.error=errorResponse.data.message})):(console.log("There"),ProjectDetails.save($scope.data,function(projectDetail){console.log("Success - Project Details creating"),$scope.project.details=projectDetail._id,$scope.project.$update(function(response){console.log("Success - Project Updating"),$scope.startUploadData=!1,$state.go("project-details",{projectId:$scope.project._id
},{reload:!0})},function(errorResponse){console.log("Fail - Project Updating"),$scope.startUploadData=!1,$scope.error=errorResponse.data.message})},function(errorResponse){console.log("Failed - Project Details creating"),$scope.startUploadData=!1,$scope.error=errorResponse.data.message}))},function(errorResponse){$scope.startUploadData=!1,$scope.error="An error occurred when trying to upload a file"})}else $scope.startUploadData=!1,$scope.error="Please fill out the fields"}}]).filter("trustAsResourceUrl",["$sce",function($sce){return function(val){return $sce.trustAsResourceUrl(val)}}]),angular.module("projects").controller("SearchController",["$scope","projects",function($scope,projects){$scope.projects=projects,$scope.dtOptions={filter:!1,info:!1,paging:!1,columnDefs:[{targets:5,sortable:!1}]}}]),angular.module("projects").directive("accessibleForm",[function(){return{restrict:"A",link:function(scope,elem){elem.on("submit",function(){var firstInvalid=elem[0].querySelector(".ng-invalid");firstInvalid&&firstInvalid.focus()})}}}]),angular.module("projects").directive("blockEnter",[function(){return{restrict:"A",link:function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&event.preventDefault()})}}}]),angular.module("projects").directive("createProjectMap",[function(){return{restrict:"E",scope:!1,controller:["$scope",function($scope){for(var alphabet=[],i=0;26>i;i++)alphabet.push(String.fromCharCode(65+i));$scope.data||($scope.data={map:{zoom:3,center:{latitude:37.1677,longitude:-97.2639},options:{mapTypeId:"satellite",scrollwheel:!0,streetViewControl:!1,tilt:0},markers:[],markerLabel:"",noOfMarkers:0,bounds:{}}}),$scope.addMarker=function(){$scope.data.map.noOfMarkers>=26||($scope.data.map.noOfMarkers+=1,$scope.data.map.markers.push({id:$scope.data.map.noOfMarkers,name:alphabet[$scope.data.map.noOfMarkers-1],coords:{latitude:$scope.data.map.center.latitude,longitude:$scope.data.map.center.longitude},options:{icon:"http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld="+alphabet[$scope.data.map.noOfMarkers-1]+"|FFFFFF|000000",fillColor:"#0000FF",draggable:!0}}))},$scope.removeMarker=function(id){$scope.data.map.noOfMarkers-=1,$scope.data.map.markers.pop()},$scope.renderMap=function(){$scope.data.map.center={latitude:$scope.data.latitude,longitude:$scope.data.longitude},$scope.data.map.zoom=20}}],templateUrl:"modules/projects/views/directives/create-project/map.client.directive.html"}}]),angular.module("projects").directive("downloadReport",[function(){return{templateUrl:"modules/projects/views/directives/download-report.client.directive.html",restrict:"E",controller:["$scope","$detection","$window",function($scope,$detection,$window){$scope.isIos=$detection.isiOS(),$scope.downloadUrl="",$scope.downloadReport=function(){$scope.downloadUrl="/download/"+$scope.project._id+"?c="+(new Date).getTime()}}]}}]),angular.module("projects").directive("projectReport",["$http",function($http){return{templateUrl:"modules/projects/views/directives/project-report.client.directive.html",restrict:"E",controller:["$scope","$sce","Lightbox",function($scope,$sce,Lightbox){$scope.downloadShadeReportUrl="",$scope.unSanitizeHtml=function(html){return $sce.trustAsHtml(html)},Lightbox.templateUrl="modules/projects/views/directives/lightbox/lightbox.html",$scope.openLightboxModal=function(image,index){Lightbox.getImageUrl=function(image){return image.imagePath},Lightbox.openModal($scope.project.details.droneImages.eyeView,index),$scope.project.details.droneImages.eyeView.length<=1&&(Lightbox.hideControlls=!0)},$scope.openLightboxModalOne=function(image,index){Lightbox.getImageUrl=function(image){return image.imagePath},Lightbox.openModal($scope.project.details.droneImages.topImage,index),$scope.project.details.droneImages.topImage.length<=1&&(Lightbox.hideControlls=!0)},$scope.tabs=[{title:"Dynamic Title 1",content:"Dynamic content 1"},{title:"Dynamic Title 2",content:"Dynamic content 2",disabled:!0}],$scope.downloadShadeReport=function(){$scope.downloadShadeReportUrl="/download-shade-report/"+$scope.project._id+"?c="+(new Date).getTime()},$scope.multiplyPercentages=function(x,y){return(x/100*(y/100)*100).toFixed(2)}}]}}]),angular.module("projects").directive("projectsHeader",["$state","$stateParams","Acl","Authentication",function($state,$stateParams,Acl,Authentication){return{scope:!0,templateUrl:"modules/projects/views/directives/projects-header.client.directive.html",restrict:"E",controller:["$scope",function($scope){var currentUser=Authentication.user;$scope.acl=Acl,$scope.keyword=$stateParams.keyword||"",$scope.filtersOn=!1,$scope.searchPlaceholder=" Search Project ","scanifly-admin"===currentUser.role&&($scope.searchPlaceholder=" Search by Project or by Company "),$scope.search=function(){var answer=!0;"create-project"===$state.current.name&&(answer=confirm("Requesting a search will redirect you from this page. Would you like to continue ?")),answer&&$state.go("search-projects",{keyword:$scope.keyword},{reload:!0})},$scope.toggleFilters=function(){$scope.filtersOn=!$scope.filtersOn},$scope.toggleProjectBar=function(){$scope.showProjectBar=!$scope.showProjectBar},$scope.showSearchBar=function(){$scope.showSearch=!0,jQuery(".search-input").focus()},$scope.hideSearchBar=function(){$scope.showSearch=!1,$scope.keyword=""},"list-projects"===$state.current.name&&($scope.stickyFilter=!0),jQuery(window).on("click",function(event){var $target=jQuery(event.target);!$scope.showProjectBar||$target.hasClass("link-projects")||$target.parents(".my-projects").length||$scope.$apply(function(){$scope.showProjectBar=!1})})}]}}]),angular.module("projects").directive("statusBar",[function(){return{templateUrl:"modules/projects/views/directives/status-bar.client.directive.html",restrict:"E",controller:["$scope",function($scope){var projectStatus=$scope.project.status,availableStatuses=[{status:"upload-complete",value:!1,current:!1},{status:"flight-successful",value:!1,current:!1},{status:"flight-scheduled",value:!1,current:!1},{status:"location-submitted",value:!1,current:!1}],newValue=!1;for(var elementId in availableStatuses)availableStatuses[elementId].status===projectStatus&&(newValue=!0,availableStatuses[elementId].current=!0),availableStatuses[elementId].value=newValue;availableStatuses.reverse(),$scope.availableStatuses=availableStatuses}]}}]),angular.module("projects").directive("assessmentComplete",["$state","$stateParams",function($state,$stateParams){return{templateUrl:"modules/projects/views/directives/status-changes/assessment-complete.client.directive.html",restrict:"E",controller:["$scope",function($scope){$scope.upload=function(){$state.go("upload-project-data",{projectId:$stateParams.projectId},{reload:!0})},$scope.markAsApproved=function(){$scope.project.assessmentComplete=new Date,$scope.project.isApproved=!0,$scope.project.status="assessment-complete",$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}}]}}]),angular.module("projects").directive("markAsSuccessful",["$state",function($state){return{templateUrl:"modules/projects/views/directives/status-changes/mark-as-successful.client.directive.html",restrict:"E",controller:["$scope",function($scope){$scope.showSchedulePanel=!1,$scope.minDate=new Date,$scope.toggleSchedulePanel=function(){$scope.showSchedulePanel=!$scope.showSchedulePanel},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={startingDay:0},$scope.schedule=function(){if(angular.isDefined($scope.data.date)){var date=$scope.data.date;$scope.project.scheduledFlight=new Date(date.getFullYear(),date.getMonth(),date.getDate(),$scope.data.time);var project=$scope.project;project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.markAsSuccessful=function(){$scope.project.successfulFlight=new Date,$scope.project.status="flight-successful",$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}}]}}]),angular.module("projects").directive("resolutionRequired",["$state","$stateParams",function($state,$stateParams){return{templateUrl:"modules/projects/views/directives/status-changes/resolution-required.client.directive.html",restrict:"E",controller:["$scope",function($scope){$scope.upload=function(){$state.go("upload-project-data",{projectId:$stateParams.projectId},{reload:!0})},$scope.markResolutionComplete=function(){$scope.project.status="resolution-complete",$scope.project.isCompleted=!0,$scope.project.completeDate=new Date,$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}}]}}]),angular.module("projects").directive("scheduleFlight",["$state","Companies",function($state,Companies){return{templateUrl:"modules/projects/views/directives/status-changes/schedule-flight.client.directive.html",restrict:"E",controller:["$scope",function($scope){$scope.data={},$scope.showSchedulePanel=!1,$scope.minDate=new Date,$scope.toggleSchedulePanel=function(){$scope.showSchedulePanel=!$scope.showSchedulePanel},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={startingDay:0},$scope.schedule=function(){if(angular.isDefined($scope.data.date)){var date=$scope.data.date;$scope.project.scheduledFlight=new Date(date.getFullYear(),date.getMonth(),date.getDate(),$scope.data.time),$scope.project.status="flight-scheduled";var project=$scope.project;project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.declineProject=function(){var project=$scope.project;project.status="declined";var answer=confirm("Are you sure you want to decline this project ?");answer&&Companies.query({},function(companies){for(var index in companies)companies[index].companyId===project.company._id&&(project.companyAdminEmail=companies[index].admins[0].email);project.$delete(function(response){$state.go("dashboard",{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})})}}]}}]),angular.module("projects").directive("uploadComplete",["$state","$stateParams",function($state,$stateParams){return{templateUrl:"modules/projects/views/directives/status-changes/upload-complete.client.directive.html",restrict:"E",controller:["$scope",function($scope){$scope.upload=function(){$state.go("project-details",{projectId:$stateParams.projectId},{reload:!0})},$scope.markAsApproved=function(){$scope.project.uploadComplete=new Date,$scope.project.isApproved=!0,$scope.project.status="upload-complete",$scope.project.$update(function(){$state.go($state.current,{},{reload:!0})},function(errorResponse){$scope.error=errorResponse.data.message})}}]}}]),angular.module("projects").directive("uploadData",["$state","$stateParams",function($state,$stateParams){return{templateUrl:"modules/projects/views/directives/upload-data.client.directive.html",restrict:"E",controller:["$scope",function($scope){$scope.upload=function(){$state.go("upload-project-data",{projectId:$stateParams.projectId},{reload:!0})}}]}}]),angular.module("projects").filter("cleanNumberedText",[function(){return function(input){return input?(input=input.replace(/[0-9]/g,""),input=input.replace(/-/g," ")):input}}]),angular.module("projects").filter("range",[function(){return function(input,from,to,format){from=parseInt(from),to=parseInt(to);for(var i=from;to>=i;i++)format?input.push(format.replace("#",i)):input.push(i);return input}}]),angular.module("projects").filter("removeDash",[function(){return function(input){return input?input.replace(/-/g," "):"All Projects"}}]),angular.module("projects").factory("Activities",["$resource",function($resource){return $resource("activities/:activityId",{activityId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").factory("Notes",["$resource",function($resource){return $resource("notes/:noteId",{noteId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").factory("ProjectDetails",["$resource",function($resource){return $resource("project-details/:projectDetailId",{projectDetailId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"},"delete":{method:"DELETE"}})}]).service("ProjectService",["Projects","$q",function(Projects,$q){this.find=function(status){return Projects.query({status:status})},this.getMarkers=function(projectsResource){var deferred=$q.defer();return projectsResource.$promise.then(function(projects){for(var markers=[],i=0;i<projects.length;i++){var marker={id:i,latitude:projects[i].geoLocation.latitude,longitude:projects[i].geoLocation.longitude,name:projects[i].name,projectId:projects[i]._id,show:!1};markers.push(marker)}deferred.resolve(markers)}),deferred.promise},this.recodeProject=function(dbProject){var data={_id:dbProject._id,name:dbProject.name,propertyImage:dbProject.propertyImage,street:dbProject.address.street,city:dbProject.address.city,state:dbProject.address.stateName+"-"+dbProject.address.state,zip:dbProject.address.zip,map:dbProject.map,firstName:dbProject.ownerDetails.firstName,lastName:dbProject.ownerDetails.lastName,phone:dbProject.ownerDetails.phone,email:dbProject.ownerDetails.email,month1:dbProject.kWh.month1,month2:dbProject.kWh.month2,month3:dbProject.kWh.month3,month4:dbProject.kWh.month4,month5:dbProject.kWh.month5,month6:dbProject.kWh.month6,month7:dbProject.kWh.month7,month8:dbProject.kWh.month8,month9:dbProject.kWh.month9,month10:dbProject.kWh.month10,month11:dbProject.kWh.month11,month12:dbProject.kWh.month12,annual:dbProject.kWh.annual,nearTrees:dbProject.propertyDetails.nearTrees,nearAirport:dbProject.propertyDetails.nearAirport,nearHighVoltage:dbProject.propertyDetails.nearHighVoltage,nearHighway:dbProject.propertyDetails.nearHighway,selfscan:dbProject.selfscan,status:dbProject.status};return data},this.createProject=function(data){var stateArray=[];angular.isDefined(data.state)&&(stateArray=data.state.split("-"));var project=new Projects({name:data.name,propertyImage:data.propertyImage,address:{street:data.street,city:data.city,state:stateArray[1]||"",stateName:stateArray[0]||"",zip:data.zip},geoLocation:{latitude:data.map.center.latitude,longitude:data.map.center.longitude},map:data.map,ownerDetails:{firstName:data.firstName,lastName:data.lastName,phone:data.phone,email:data.email},kWh:{month1:data.month1,month2:data.month2,month3:data.month3,month4:data.month4,month5:data.month5,month6:data.month6,month7:data.month7,month8:data.month8,month9:data.month9,month10:data.month10,month11:data.month11,month12:data.month12,annual:data.annual},propertyDetails:{nearTrees:data.nearTrees,nearAirport:data.nearAirport,nearHighVoltage:data.nearHighVoltage,nearHighway:data.nearHighway},selfscan:data.selfscan,status:data.status||""});return data._id&&(project._id=data._id),project}}]),angular.module("projects").factory("S3",["$resource",function($resource){return $resource("configuration/:resource",{resource:"@_id"})}]),angular.module("projects").factory("States",["$resource",function($resource){return $resource("modules/projects/config/states.json",{},{})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]).run(["$rootScope","Acl",function($rootScope,Acl){$rootScope.$on("$stateChangeStart",Acl.handleAuthenticationRedirects),$rootScope.acl=Acl}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{url:"/settings/",authenticate:!0,controller:"SettingsController",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("profile",{url:"/settings/profile",authenticate:!0,controller:"SettingsController",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("company",{url:"/settings/company",authenticate:!0,controller:"CompanyManagementController",templateUrl:"modules/users/views/settings/edit-company.client.view.html"}).state("password",{url:"/settings/password",authenticate:!0,controller:"SettingsController",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("billing",{url:"/settings/billing",authenticate:!0,controller:"SettingsController",templateUrl:"modules/users/views/settings/billing.client.view.html"}).state("user-management",{url:"/settings/user/management",authenticate:!0,controller:"SettingsController",templateUrl:"modules/users/views/settings/user-management.client.view.html"}).state("company-management",{url:"/settings/company/management",authenticate:!0,templateUrl:"modules/users/views/settings/company-management.client.view.html"}).state("tutorials",{url:"/settings/tutorials",authenticate:!0,templateUrl:"modules/users/views/settings/tutorials.client.view.html"}).state("signup",{url:"/signup",authenticate:!1,seo:{title:"Sign up - Scanifly",description:"Create your scanifly account",keywords:""},controller:"AuthenticationController",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",authenticate:!1,seo:{title:"Sign in - Scanifly",description:"Access your account",keywords:""},controller:"AuthenticationController",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",authenticate:!1,controller:"PasswordController",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",authenticate:!1,templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",authenticate:!1,templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",authenticate:!1,controller:"PasswordController",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]).run(["$rootScope","$state",function($rootScope,$state){$rootScope.$state=$state}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.submitted=!1,$scope.signup=function(userForm){$scope.submitted=!0,$scope.success=$scope.error=null,userForm.$valid&&!userForm.agreement.$pristine?$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/dashboard")}).error(function(response){$scope.error=response.message,response.field&&userForm[response.field].$setValidity("fieldError",!1)}):$scope.error="Please fill out all the fields."},$scope.signin=function(userForm){$scope.success=$scope.error=null,userForm.$valid?$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/dashboard")}).error(function(response){userForm.$setPristine(),$scope.error=response.message}):$scope.error="Please fill out all the fields."}}]),angular.module("users").directive("modal",function(){return{template:'<div class="modal fade"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">{{ title }}</h4></div><div class="modal-body" ng-transclude></div></div></div></div>',restrict:"E",transclude:!0,replace:!0,scope:!0,link:function(scope,element,attrs){scope.title=attrs.title,scope.$watch(attrs.companydata,function(value){var data=value.admins;if(void 0!==data){data=data[0];var admin_name=data.name,admin_email=data.email;jQuery(element).find("#admin_name").val(admin_name),jQuery(element).find("#admin_email").val(admin_email)}}),scope.$watch(attrs.visible,function(value){value===!0?jQuery(element).modal("show"):jQuery(element).modal("hide")}),jQuery(element).on("shown.bs.modal",function(){scope.$apply(function(){scope.$parent[attrs.visible]=!0})}),jQuery(element).on("hidden.bs.modal",function(){scope.$apply(function(){scope.$parent[attrs.visible]=!1})})}}}),angular.module("users").controller("CompanyManagementController",["$scope","$state","$http","$location","Authentication","Companies","Projects",function($scope,$state,$http,$location,Authentication,Companies,Projects){$scope.user=Authentication.user,$scope.companies={},$scope.projects={},$scope.user&&($scope.acl.hasAccess("company-management")||$scope.acl.hasAccess("edit-company"))||$location.path("/"),$scope.submitted=!1,$scope.isCollapsed=!0,$scope.dtOptions={filter:!1,info:!1,paging:!1,columnDefs:[{targets:-1,sortable:!1}]},$scope.listCompanies=function(){$scope.companies=Companies.query({})},$scope.updateCompanyProfile=function(companyForm){if($scope.submitted=!0,$scope.success=$scope.error=null,companyForm.$valid){$scope.success=$scope.error=null;var company=new Companies($scope.user.company);company.$update(function(response){$scope.success="Company saved successfully",companyForm.$setPristine(),Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.error="Please fill out the form"},$scope.projects=Projects.query({}),$scope.countLocationsSubmitted=function(company_id){$scope.locationsSubmittedCount=0;for(var i in $scope.projects)($scope.projects[i].company&&$scope.projects[i].company._id)===company_id&&"location-submitted"===$scope.projects[i].status&&($scope.locationsSubmittedCount+=1);return $scope.locationsSubmittedCount},$scope.countFlightsScheduled=function(company_id){$scope.flightsScheduledCount=0;for(var i in $scope.projects)($scope.projects[i].company&&$scope.projects[i].company._id)===company_id&&"flight-scheduled"===$scope.projects[i].status&&($scope.flightsScheduledCount+=1);return $scope.flightsScheduledCount},$scope.countFlightsSuccessful=function(company_id){$scope.flightsSuccessfulCount=0;for(var i in $scope.projects)($scope.projects[i].company&&$scope.projects[i].company._id)===company_id&&"flight-successful"===$scope.projects[i].status&&($scope.flightsSuccessfulCount+=1);return $scope.flightsSuccessfulCount},$scope.countDataUpload=function(company_id){$scope.dataUploadCount=0;for(var i in $scope.projects)($scope.projects[i].company&&$scope.projects[i].company._id)===company_id&&"upload-complete"===$scope.projects[i].status&&($scope.dataUploadCount+=1);return $scope.dataUploadCount},$scope.removeCompany=function(company){var company_id=company.companyId,r=confirm("Do you want to really remove this company?");r===!0&&Companies["delete"]({companyId:company_id}).$promise.then(function(){jQuery.each($scope.companies,function(i){return $scope.companies[i].companyId===company.companyId?($scope.companies.splice(i,1),!1):void 0}),console.log("Company successfully removed")})},$scope.getProjectsByCompanyID=function(company){var myProjects=[],company_id=company.companyId;for(var i in $scope.projects)($scope.projects[i].company&&$scope.projects[i].company._id)===company_id&&myProjects.push($scope.projects[i]);return myProjects},$scope.formateDate=function(data){var date=new Date(data);return date.getMonth()+1+"."+date.getDay()+"."+(date.getYear()+1900)},$scope.formatStatus_icon=function(data){return"flight-successful"===data?"status-icons-listing icon-flight-successful":"flight-scheduled"===data?"status-icons-listing icon-flight-scheduled":"location-submitted"===data?"status-icons-listing icon-location-submitted":"status-icons-listing icon-assessment-complete"},$scope.formatStatus_title=function(data){var data1=data.split("-")[0],data2=data.split("-")[1];return data1.charAt(0).toUpperCase()+data1.slice(1)+" "+(data2.charAt(0).toUpperCase()+data2.slice(1))},$scope.removeProject=function(project,company){var r=confirm("Do you really want to remove this project?");r===!0&&Projects["delete"]({projectId:project._id}).$promise.then(function(response){$scope.projects=Projects.query({}),console.log("Project was successfully removed")},function(err){alert("There is an error removing this project.")})},$scope.isLocationSubmitted=function(project){return"location-submitted"===project.status},$scope.isFlightSuccessful=function(project){return"flight-successful"===project.status},$scope.isAssessmentComplete=function(project){return"upload-complete"===project.status},$scope.isFlightScheduled=function(project){return"flight-scheduled"===project.status},$scope.view_project=function(project){var url=$state.href("project-details",{projectId:project._id});window.open(url,"_blank")},$scope.showModal=!1,$scope.companyToshow={},$scope.view_companyInfo=function(company){$scope.showModal=!$scope.showModal,$scope.companyToshow=company},$scope.closeModal=function(){$scope.showModal=!1}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.submitted=!1,$scope.askForPasswordReset=function(forgotPassForm){$scope.submitted=!0,$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials={},forgotPassForm.$setPristine(),$scope.credentials=null,$scope.success="Email was sent successfully"}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","Acl",function($scope,$http,$location,Users,Authentication,Acl){$scope.user=Object.create(Authentication.user),$scope.users={},$scope.acl=Acl,$scope.user&&($scope.user||$scope.acl.hasAccess("user-management"))||$location.path("/"),$scope.submitted=!1,$scope.dtOptions={filter:!1,info:!1,paging:!1,columnDefs:[{targets:-1,sortable:!1}]},$scope.updateUserProfile=function(userForm){if($scope.submitted=!0,$scope.upsuccess=$scope.uperror=null,userForm.$valid){$scope.upsuccess=$scope.uperror=null;var user=new Users($scope.user);user.$update(function(response){$scope.upsuccess="Profile saved successfully",userForm.$setPristine(),Authentication.user=response},function(response){$scope.uperror=response.data.message,response.data.field&&userForm[response.data.field].$setValidity("fieldError",!1)})}else $scope.uperror="Please fill out the form"},$scope.changeUserPassword=function(passwordForm){$scope.submitted=!0,$scope.pwsuccess=$scope.pwerror=null,passwordForm.$valid?$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.pwsuccess="Password Changed successfully",$scope.passwordDetails={},passwordForm.$setPristine()}).error(function(response){$scope.pwerror=response.message}):$scope.pwerror="Please fill out the form"},$scope.signup=function(userForm){$scope.submitted=!0,$scope.success=$scope.error=null,userForm.$valid?(userForm.credentials.userManagementForm=!0,$http.post("/auth/signup",userForm.credentials).success(function(response){$scope.success="User "+userForm.credentials.name+" was added successfully!",userForm.credentials={},userForm.$setPristine(),$scope.users.unshift(response)}).error(function(response){$scope.error=response.message})):$scope.error="Please fill out all the fields."},$scope.listUsers=function(){$scope.users=Users.query({})},$scope.removeUser=function(userId){if(userId){var answer=confirm("Are you sure you want to delete the selected user ?");if(answer){Users["delete"]({userId:userId});for(var i in $scope.users)$scope.users[i]._id===userId&&($scope.users[i].status="deleted")}}},$scope.activateUser=function(userId){if(userId){var answer=confirm("Are you sure you want to activate the selected user ?");if(answer){Users.update({userId:userId},$scope.user);for(var i in $scope.users)$scope.users[i]._id===userId&&($scope.users[i].status="active")}}}}]),angular.module("users").directive("blockSpace",[function(){return{restrict:"A",link:function(scope,element,attrs,ctrl){element.bind("keydown keypress",function(event){32===event.which&&event.preventDefault()})}}}]),angular.module("users").directive("clearFieldError",[function(){return{require:"ngModel",link:function(scope,element,attrs,ctrl){element.bind("change",function(){ctrl.$setValidity("fieldError",!0)})}}}]),angular.module("users").directive("uniqueEmail",["Users",function(Users){return{require:"ngModel",restrict:"A",link:function(scope,element,attrs,ctrl){ctrl.$parsers.push(function(viewValue){return viewValue?(Users.query({email:viewValue},function(users){0===users.length?ctrl.$setValidity("uniqueEmail",!0):ctrl.$setValidity("uniqueEmail",!1)}),viewValue):void 0})}}}]),angular.module("users").filter("formatRole",function(){return function(input){return input.replace("customer-","")}}),angular.module("users").service("Acl",["Authentication","$state",function(Authentication,$state){var authentication=Authentication,abilities={"scanifly-admin":["dashboard-submittedCompany","user-management","company-management","project-processing","view-pre-report","download-report"],"customer-admin":["dashboard-submittedUser","assessment-feedback","billing","new-scan","user-management","user-management-customerType","edit-company","download-report","edit-project","download-project-files","tutorials"],"customer-systemDesigner":["dashboard-submittedUser","assessment-feedback","download-report","download-project-files","tutorials"],guest:[]};return{hasAccess:function(resource){var role=authentication.user&&abilities[authentication.user.role]?authentication.user.role:"guest";return-1!==abilities[role].indexOf(resource)},handleAuthenticationRedirects:function(event,toState,toParams){angular.isDefined(toState.authenticate)&&(Authentication.user||toState.authenticate!==!0?Authentication.user&&toState.authenticate===!1&&($state.go("dashboard"),event.preventDefault()):($state.go("signin"),event.preventDefault()))}}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Companies",["$resource",function($resource){return $resource("companies/:companyId",{companyId:"@_id"},{update:{method:"PUT"},"delete":{method:"DELETE"}})}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users/:userId",{},{update:{method:"PUT"}})}]);